export class VehicleRegistration {
  dateOfLastUpdate: Date;
  colour: string;
  abiBrokerNetCode: any;
  vehicleClass: string;
  engineNumber: string;
  engineCapacity: string;
  transmissionCode: string;
  dtpMakeCode: string;
  exported: boolean;
  yearOfManufacture: string;
  wheelPlan: any;
  dateExported: any;
  scrapped: boolean;
  transmission: string;
  dateFirstRegisteredUk: Date;
  model: string;
  gearCount: number;
  importNonEu: boolean;
  dtpModelCode: string;
  previousVrmGb: any;
  grossWeight: number;
  doorPlanLiteral: string;
  mvrisModelCode: string;
  vin: string;
  vrm: string;
  dateFirstRegistered: Date;
  dateScrapped: any;
  doorPlan: string;
  vinLast5: string;
  vehicleUsedBeforeFirstRegistration: boolean;
  maxPermissibleMass: number;
  make: string;
  makeModel: string;
  transmissionType: string;
  seatingCapacity: any;
  fuelType: string;
  co2Emissions: number;
  imported: boolean;
  mvrisMakeCode: string;
  previousVrmNi: any;
  vinConfirmationFlag: any;

  constructor(data: any) {
    this.dateOfLastUpdate = new Date(data.DateOfLastUpdate);
    this.colour = data.Colour;
    this.abiBrokerNetCode = data.AbiBrokerNetCode;
    this.vehicleClass = data.VehicleClass;
    this.engineNumber = data.EngineNumber;
    this.engineCapacity = data.EngineCapacity;
    this.transmissionCode = data.TransmissionCode;
    this.dtpMakeCode = data.DtpMakeCode;
    this.exported = data.Exported;
    this.yearOfManufacture = data.YearOfManufacture;
    this.wheelPlan = data.WheelPlan;
    this.dateExported = data.DateExported;
    this.scrapped = data.Scrapped;
    this.transmission = data.Transmission;
    this.dateFirstRegisteredUk = new Date(data.DateFirstRegisteredUk);
    this.model = data.Model;
    this.gearCount = data.GearCount;
    this.importNonEu = data.ImportNonEu;
    this.dtpModelCode = data.DtpModelCode;
    this.previousVrmGb = data.PreviousVrmGb;
    this.grossWeight = data.GrossWeight;
    this.doorPlanLiteral = data.DoorPlanLiteral;
    this.mvrisModelCode = data.MvrisModelCode;
    this.vin = data.Vin;
    this.vrm = data.Vrm;
    this.dateFirstRegistered = new Date(data.DateFirstRegistered);
    this.dateScrapped = data.DateScrapped;
    this.doorPlan = data.DoorPlan;
    this.vinLast5 = data.VinLast5;
    this.vehicleUsedBeforeFirstRegistration =
      data.VehicleUsedBeforeFirstRegistration;
    this.maxPermissibleMass = data.MaxPermissibleMass;
    this.make = data.Make;
    this.makeModel = data.MakeModel;
    this.transmissionType = data.TransmissionType;
    this.seatingCapacity = data.SeatingCapacity;
    this.fuelType = data.FuelType;
    this.co2Emissions = data.Co2Emissions;
    this.imported = data.Imported;
    this.mvrisMakeCode = data.MvrisMakeCode;
    this.previousVrmNi = data.PreviousVrmNi;
    this.vinConfirmationFlag = data.VinConfirmationFlag;
  }
}
